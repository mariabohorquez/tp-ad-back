{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Morfando API",
    "description": "Documentacion de la API de Morfando",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/restaurants": {
      "post": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Create a restaurant.",
        "description": "Endpoint to create a restaurant. PriceRange must be $, $$, $$$ or $$$$.",
        "parameters": [
          {
            "name": "Restaurants",
            "in": "body",
            "description": "Restaurant object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRestaurant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Restaurant created successfully",
            "schema": {
              "$ref": "#/definitions/Restaurant"
            }
          },
          "500": {
            "description": "Error creating restaurant"
          }
        }
      }
    },
    "/restaurants/{name}": {
      "get": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Retrieve all restaurants with regex.",
        "description": "Retrieve all restaurants from the database.    If a name is provided, it will be used to filter the results.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": false,
            "type": "string",
            "description": "Text to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Restaurants"
            }
          },
          "500": {
            "description": "Some error occurred while retrieving restaurants."
          }
        }
      }
    },
    "/restaurants/{id}": {
      "get": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Get a restaurant by id.",
        "description": "Endpoint to get a restaurant by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Restaurant"
            }
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error retrieving restaurant"
          }
        }
      },
      "patch": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Update a restaurant.",
        "description": "Endpoint to update a restaurant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          },
          {
            "name": "Restaurant",
            "in": "body",
            "description": "Restaurant object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Restaurant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant updated successfully",
            "schema": {
              "$ref": "#/definitions/Restaurant"
            }
          },
          "400": {
            "description": "Restaurant not found"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error updating restaurant"
          }
        }
      },
      "delete": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Delete a restaurant.",
        "description": "Endpoint to delete a restaurant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant deleted successfully"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error deleting restaurant"
          }
        }
      }
    },
    "/restaurants/{id}/close/{status}": {
      "patch": {
        "tags": [
          "Restaurant"
        ],
        "summary": "Set restaurant   overwrite.",
        "description": "Endpoint to set restaurant   overwrite,    if set to true restaurant will close regardless of time,    if set to false restaurant will open/close taking into account normal opening hours.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "boolean",
            "description": "true/false closed overwrite"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant set to {status} successfully"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error {status} restaurant"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/review/{userId}": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Post a review to a restaurant.",
        "description": "Endpoint to post a review to a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "user id"
          },
          {
            "name": "Review",
            "in": "body",
            "description": "Review object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review posted successfully"
          },
          "400": {
            "description": "Body cannot be empty"
          },
          "404": {
            "description": "User or restaurant not found"
          },
          "500": {
            "description": "Some error ocurred when creating the review"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/reviews": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all reviews from a restaurant.",
        "description": "Endpoint to get all reviews from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Reviews retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error retrieving reviews"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/dishes": {
      "post": {
        "tags": [
          "Dish"
        ],
        "summary": "Create a dish.",
        "description": "Endpoint to create a dish.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          },
          {
            "name": "dish",
            "in": "body",
            "description": "Dish object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Dish created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error creating dish"
          }
        }
      },
      "get": {
        "tags": [
          "Dish"
        ],
        "summary": "Get all dishes from a restaurant.",
        "description": "Endpoint to get all dishes from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Dishes retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error retrieving dishes"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/dishes/{dishId}": {
      "get": {
        "tags": [
          "Dish"
        ],
        "summary": "Get a dish from a restaurant.",
        "description": "Endpoint to get a dish from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Dish id"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Dish retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          },
          "404": {
            "description": "Restaurant or dish not found"
          },
          "500": {
            "description": "Error retrieving dish"
          }
        }
      },
      "patch": {
        "tags": [
          "Dish"
        ],
        "summary": "Update a dish from a restaurant.",
        "description": "Endpoint to update a dish from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Dish id"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          },
          {
            "name": "dish",
            "in": "body",
            "description": "Dish object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dish"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dish updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Restaurant or dish not found"
          },
          "500": {
            "description": "Error updating dish"
          }
        }
      },
      "delete": {
        "tags": [
          "Dish"
        ],
        "summary": "Delete a dish from a restaurant.",
        "description": "Endpoint to delete a dish from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "dishId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Dish id"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Dish deleted successfully"
          },
          "404": {
            "description": "Restaurant or dish not found"
          },
          "500": {
            "description": "Error deleting dish"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/categories": {
      "post": {
        "tags": [
          "Menu categories"
        ],
        "summary": "Create a category for a restaurant.",
        "description": "Endpoint to create a category for a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Restaurant id"
          },
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createMenuCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Body for category cannot be empty!"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error updating restaurant with category"
          }
        }
      },
      "get": {
        "tags": [
          "Menu categories"
        ],
        "summary": "Get all categories from a restaurant.",
        "description": "Endpoint to get all categories from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "type": "array"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error retrieving categories"
          }
        }
      }
    },
    "/restaurants/{restaurantId}/categories/{categoryId}": {
      "delete": {
        "tags": [
          "Menu categories"
        ],
        "summary": "Delete a category from a restaurant.",
        "description": "Endpoint to delete a category from a restaurant.",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Restaurant id",
            "required": true,
            "type": "string",
            "in": "query"
          },
          {
            "name": "category",
            "in": "body",
            "description": "Category String",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "404": {
            "description": "Restaurant not found"
          },
          "500": {
            "description": "Error updating restaurant with category"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "description": "Health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Restaurant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "La Pizzeria"
        },
        "openingTime": {
          "type": "object",
          "properties": {
            "hours": {
              "type": "number",
              "example": 12
            },
            "minutes": {
              "type": "number",
              "example": 30
            }
          }
        },
        "closingTime": {
          "type": "object",
          "properties": {
            "hours": {
              "type": "number",
              "example": 22
            },
            "minutes": {
              "type": "number",
              "example": 0
            }
          }
        },
        "priceRange": {
          "type": "string",
          "example": "$$"
        },
        "address": {
          "type": "object",
          "properties": {
            "streetName": {
              "type": "string",
              "example": "Calle 1"
            },
            "streetNumber": {
              "type": "number",
              "example": 123
            },
            "neighborhood": {
              "type": "string",
              "example": "Palermo"
            },
            "city": {
              "type": "string",
              "example": "Buenos Aires"
            },
            "state": {
              "type": "string",
              "example": "Buenos Aires"
            },
            "country": {
              "type": "string",
              "example": "Argentina"
            }
          }
        },
        "restaurantTypes": {
          "type": "array",
          "example": [
            "Italian",
            "Pizza"
          ],
          "items": {
            "type": "string"
          }
        },
        "menuCategories": {
          "type": "array",
          "example": [
            "Pizza",
            "Pasta"
          ],
          "items": {
            "type": "string"
          }
        },
        "isClosedOverwrite": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "restaurantTypes"
      ]
    },
    "createRestaurant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "La Pizzeria"
        },
        "openingTime": {
          "type": "object",
          "properties": {
            "hours": {
              "type": "number",
              "example": 12
            },
            "minutes": {
              "type": "number",
              "example": 30
            }
          }
        },
        "closingTime": {
          "type": "object",
          "properties": {
            "hours": {
              "type": "number",
              "example": 22
            },
            "minutes": {
              "type": "number",
              "example": 0
            }
          }
        },
        "priceRange": {
          "type": "string",
          "example": "$$"
        },
        "address": {
          "type": "object",
          "properties": {
            "streetName": {
              "type": "string",
              "example": "Calle 1"
            },
            "streetNumber": {
              "type": "number",
              "example": 123
            },
            "neighborhood": {
              "type": "string",
              "example": "Palermo"
            },
            "city": {
              "type": "string",
              "example": "Buenos Aires"
            },
            "state": {
              "type": "string",
              "example": "Buenos Aires"
            },
            "country": {
              "type": "string",
              "example": "Argentina"
            },
            "longitude": {
              "type": "number",
              "example": -100
            },
            "latitude": {
              "type": "number",
              "example": 50
            }
          }
        },
        "restaurantTypes": {
          "type": "array",
          "example": [
            "Italian",
            "Pizza"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "openingTime",
        "closingTime",
        "priceRange",
        "restaurantTypes"
      ]
    },
    "Restaurants": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Restaurant"
      }
    },
    "Owner": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "email": {
          "type": "string",
          "example": "the-coolest@anydomain.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "restaurants": {
          "$ref": "#/definitions/Restaurant"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "google": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Jane Doe"
            },
            "id": {
              "type": "string",
              "example": "1234567890"
            },
            "email": {
              "type": "string",
              "example": "jane-doe@gmail.com"
            }
          }
        },
        "profilePicture": {
          "type": "string",
          "example": ""
        },
        "favoriteRestaurants": {
          "$ref": "#/definitions/Restaurants"
        }
      }
    },
    "Dish": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Pizza Margarita"
        },
        "price": {
          "type": "number",
          "example": 1000
        },
        "description": {
          "type": "string",
          "example": "Pizza con tomate, queso y albahaca"
        },
        "category": {
          "type": "string",
          "example": "Pizzas"
        },
        "ingredients": {
          "type": "array",
          "example": [
            "tomate",
            "queso",
            "albahaca"
          ],
          "items": {
            "type": "string"
          }
        },
        "isVegan": {
          "type": "boolean",
          "example": false
        },
        "isGlutenFree": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "name",
        "price",
        "category",
        "ingredients"
      ]
    },
    "createReview": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "number",
          "example": 5
        },
        "comment": {
          "type": "string",
          "example": "Muy buena pizza"
        }
      },
      "required": [
        "rating"
      ]
    },
    "Review": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "number",
          "example": 5
        },
        "comment": {
          "type": "string",
          "example": "Muy buena pizza"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "rating",
        "user"
      ]
    },
    "Reviews": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Review"
      }
    },
    "Menu": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Dish"
      }
    },
    "createMenuCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Pizzas"
        }
      },
      "required": [
        "name"
      ]
    }
  }
}